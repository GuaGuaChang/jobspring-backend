name: DAST (OWASP ZAP)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 18 * * 1"

jobs:

  api-fullscan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (optional for rules file)
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get JWT by login
        id: get_token
        env:
          API_BASE: ${{ secrets.API_BASE }}
          TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
        run: |
          set -e
          RESP=$(curl -s -X POST "$API_BASE/api/auth/login" \
            -H "Content-Type: application/json" \
            -d "{\"email\":\"$TEST_EMAIL\",\"password\":\"$TEST_PASSWORD\"}")
          JWT=$(echo "$RESP" | jq -r '.token')
          if [ -z "$JWT" ] || [ "$JWT" = "null" ]; then
            echo "Login failed or token not found. Response: $RESP"
            exit 1
          fi
          echo "jwt=$JWT" >> "$GITHUB_OUTPUT"

      - name: ZAP Full Scan (API with Auth Header)
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: ${{ secrets.API_BASE }}
          rules_file_name: ".zap/rules.tsv"
          cmd_options: >-
            -a
            -z "
            -config replacer.full_list(0).description=auth
            -config replacer.full_list(0).enabled=true
            -config replacer.full_list(0).matchtype=REQ_HEADER
            -config replacer.full_list(0).matchstr=Authorization
            -config replacer.full_list(0).regex=false
            -config replacer.full_list(0).replacement=Bearer ${{ steps.get_token.outputs.jwt }}
            "
          fail_action: false
          allow_issue_writing: false

      - name: Upload ZAP API Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-api-report-${{ github.run_id }}-${{ github.job }}
          path: |
            report_html.html
            zap_scan.log
          if-no-files-found: warn